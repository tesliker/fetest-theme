{"version":3,"sources":["global.scss","../article/_article.scss","../preprocess/_mixins.scss","../preprocess/_variables.scss"],"names":[],"mappings":"AAMA,4DCNA,cACE,gBACA,iBAAmB,CAFrB,iBAII,kBACA,YACA,UACA,aCEF,mBACA,AACA,oDDFE,QAAU,CATd,mBAWM,WACA,oBAAsB,CACvB,0BAbL,kBAiBM,eACA,WAAa,CACd,CAEH,0BArBF,kBAuBM,YACA,WAAa,CACd,CAIL,4BCpBE,mBACA,AACA,sDDoBA,WACA,eACA,YAAc,CACf,yBAGC,aAAe,CD7BjB,KACE,oCACA,cAAgB,CACjB,EAGC,cACA,oBAAsB,CAFxB,QAII,aGjBa,CHajB,UAOI,aGnBe,CHoBhB,GAID,aAAe,CAChB,qBAGC,oBAAsB,CACvB,mDAKG,qBACA,qBAAuB,CACxB,WE5BD,mBACA,AACA,mDAA2B,CF6B7B,aAGI,WACA,qBACA,gCACA,cACA,aAAe,CAPnB,mBASM,uCACA,UGhDS,CHsCf,qBAaM,UGnDS,CHsCf,cAiBI,SACA,UAAY,CAlBhB,cAqBI,oBAAsB,CACvB,OAID,aEzDA,mBACA,AACA,oDFyDA,WACA,gBACA,mBACA,iBACA,kBACA,cACA,cAAgB,CACjB,0BAED,uBAEI,iBAAmB,CAEtB,CAAA","file":"global.css","sourcesContent":["// import SASS files\n@import '../preprocess/variables';\n@import '../preprocess/mixins';\n@import '../article/article';\n\n// import web fonts\n@import 'https://fonts.googleapis.com/css?family=Fira+Sans';\n\nhtml {\n  font-family: 'Fira Sans', sans-serif;\n  font-size: 16px;\n}\n\na {\n  color: $secondary;\n  text-decoration: none;\n  &:hover {\n    color: $primary;\n  }\n  &:visited {\n    color: $secondary;\n  }\n}\n\nh2 {\n  font-size: 2em;\n}\n\n.site-branding--name {\n  text-decoration: none;\n}\n\n#block-fetest-branding {\n  > h2,\n  > a {\n    display: inline-block;\n    vertical-align: middle;\n  }\n}\n\nheader nav {\n  @include linear-gradient($primary, darken($primary, 10%));\n  a {\n    color: $white;\n    text-decoration: none;\n    text-shadow: 0px 1px 2px $primary;\n    padding: .8rem;\n    display: block;\n    &:hover {\n      background-color: rgba(256,256,256,.3);\n      color: $white;\n    }\n    &:visited {\n      color: $white;\n    }\n  }\n  ul {\n    margin: 0;\n    clear: both;\n  }\n  li {\n    display: inline-block;\n  }\n}\n\nbutton {\n  padding: 1rem;\n  @include linear-gradient($primary, darken($primary, 10%));\n  color: $white;\n  font-size: 1.2em;\n  border: medium none;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  cursor: pointer;\n}\n\n#block-fetest-branding {\n  @media (max-width: 400px) {\n    text-align: center;\n  }\n}",".hero-wrapper {\n  overflow: hidden;\n  position: relative;\n  h2 {\n    position: absolute;\n    bottom: 1rem;\n    left: 1rem;\n    padding: 10px;\n    @include linear-gradient($secondary, darken($secondary, 10%));\n    margin: 0;\n    a {\n      color: $white;\n      text-decoration: none;\n    }\n  }\n  @media (min-width: 768px) {\n    img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n  @media (max-width: 768px) {\n    img {\n      width: 900px;\n      height: auto;\n    }\n  }\n}\n\n.field--name-field-subtitle {\n  @include linear-gradient(to right, $primary, $secondary);\n  color: $white;\n  font-size: 24px;\n  padding: 1rem;\n}\n\n.field--name-field-image {\n  line-height: 0;\n}","/// @param {Keyword | Angle} $direction - Linear gradient direction\n/// @param {Arglist} $color-stops - List of color-stops composing the gradient\n@mixin linear-gradient($direction, $color-stops...) {\n  // Direction has been omitted and happens to be a color-stop\n  @if is-direction($direction) == false {\n    $color-stops: $direction, $color-stops;\n    $direction: 180deg;\n  }\n\n  background: nth(nth($color-stops, 1), 1);\n  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\n  background: linear-gradient($direction, $color-stops);\n}\n\n/// @param {*} $value - Value to test\n/// @return {Bool}\n@function is-direction($value) {\n  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);\n  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));\n\n  @return $is-keyword or $is-angle;\n}\n\n/// @param {Keyword | Angle} $value - Value to convert\n/// @require {function} is-direction\n/// @require {function} convert-angle\n/// @throw Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.;\n@function legacy-direction($value) {\n  @if is-direction($value) == false {\n    @error \"Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.\";\n  }\n\n  $conversion-map: (\n          to top          : bottom,\n          to top right    : bottom left,\n          to right top    : left bottom,\n          to right        : left,\n          to bottom right : top left,\n          to right bottom : left top,\n          to bottom       : top,\n          to bottom left  : top right,\n          to left bottom  : right top,\n          to left         : right,\n          to left top     : right bottom,\n          to top left     : bottom right\n  );\n\n  @if map-has-key($conversion-map, $value) {\n    @return map-get($conversion-map, $value);\n  }\n\n  @return 90deg - $value;\n}\n","$primary: #1f41a7;\n$secondary: #7c9df0;\n$white: #FFFFFF;"],"sourceRoot":"/source/"}